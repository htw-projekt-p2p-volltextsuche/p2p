openapi: 3.1.0
info:
  title: P2P framework
  version: 0.2
paths:
  /:key:
    get:
      summary: Get an entry from hash table
      description: data is an array
      parameters:
      - name: key
        in: path
      responses:
        "200":
          description: OK
          content:
            schema:
              format:
                error: "boolean"
                key: "string"
                value: "any[]"
              example:
                error: false
                key: "Grundgesetz"
                value: [ "postingList1", "postingList2" ]
        "400":
          description: User error
          content:
            schema:
              format:
                error: "boolean"
                errorMsg: "string"
              example:
                error: true
                errorMsg: "No key given"
    put:
      summary: Insert an entry into the hash table (replace if exists)
      description: data shall be an array, if it is not it will be wrapped in one
      parameters:
      - name: key
        in: path
      - name: data
        in: body
        schema:
          format:
            data: "any"
      responses:
        "200":
          description: OK
          content:
            schema:
              format:
                error: "boolean"
                key: "string"
                value: "any[]"
              example:
                error: false
                key: "Grundgesetz"
                value: "[ 'inserted', 'data' ]"
        "400":
          description: User error
          content:
            schema:
              format:
                error: "boolean"
                errorMsg: "string"
              example:
                error: true
                errorMsg: "missing data"
  /append/:key:
    post:
      summary: Append to an entry in the hash table
      description: data shall be an array (if not it will be encapsulated in one) and will be concatenated with the existing entry if there is one
      parameters:
      - name: key
        in: path
      - name: data
        in: body
        schema:
          format:
            data: "any"
      responses:
        "200":
          description: OK
          content:
            schema:
              format:
                error: "boolean"
                key: "string"
                value: "any[]"
              example:
                error: false
                key: "Grundgesetz"
                value: "[ 'inserted', 'data' ]"
        "400":
          description: User error
          content:
            schema:
              format:
                error: "boolean"
                errorMsg: "string"
              example:
                error: true
                errorMsg: "missing data"
  /batch-get:
    post:
      summary: Get multiple entries of the hash table
      description:
        parameters:
          - name: keys
            in: body
            schema:
              format:
                data: "string[]"
        responses:
          "200":
            description: OK
            content:
              schema:
                format:
                  error: "boolean"
                  keys: "string[]"
                  values: "object"
                example:
                  error: false
                  keys: [ "Grundgesetz", "Merkel" ]
                  values: {
                    "Grungesetz": {
                      "error": false,
                      "value": [ "postingList1", "postingList2" ]
                    },
                    "Merkel": {
                      "error": true,
                      "errorMsg": "Not found"
                    }
          "400":
            description: User error
            content:
              schema:
                format:
                  error: "boolean"
                  errorMsg: "string"
                example:
                  error: true
                  errorMsg: "missing keys"

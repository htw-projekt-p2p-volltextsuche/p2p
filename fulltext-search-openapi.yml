openapi: 3.1.0
info:
  title: p2p-search-engine
  version: '1.0'
  summary: Bundestags-speeches search API
  description: This API provides access to the functionality of the full-text search engine. The provided functionality is the search for terms in indexed documents and the indexing of documents themselves.
  contact:
    name: Joscha Seelig
    email: s0566845@htw-berlin.de
servers:
  - url: 'http://localhost:3000'
paths:
  /searches:
    parameters: []
    post:
      summary: Search speeches
      operationId: post-search
      responses:
        '200':
          $ref: '#/components/responses/SearchResult'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description: Retrieve the most relevant documents for the given search query.
  /indexes:
    post:
      summary: Index the speeches
      operationId: post-speech
      responses:
        '201':
          $ref: '#/components/responses/SearchResult'
        '400':
          description: Bad Request
        '401':
          description: ''
      description: Include a speech to the inverted index.
      parameters: []
      requestBody:
        required: true
    parameters: []
    delete:
      summary: ''
      operationId: delete-speech
      responses:
        '200':
          description: OK
components:
  schemas:
    Query:
      title: Query
      type: object
      description: This entity is an abstraction over a query for searching the indexed documents
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      x-examples:
        Simple query:
          query: corona AND lockdown OR test
      properties:
        query:
          type: string
    Speech:
      description: This entity contains all relevant information related to a single speech
      type: object
      x-examples:
        example:
          id: uuid
          title: string
          speaker: string
          affiliation: string
          date: 'Date in ISO 8601-1:2019 String Format'
          text: string
      x-internal: false
      properties:
        id:
          type: string
          minLength: 1
          description: docId as uuid
        title:
          type: string
          minLength: 1
        speaker:
          type: string
          minLength: 1
        affiliation:
          type: string
          minLength: 1
          description: affiliation the speaker belongs to
        date:
          type: string
          minLength: 1
          description: 'date at which the speech was given in ISO 8601-1:2019 format'
        text:
          type: string
          minLength: 1
      required:
        - id
        - title
        - speaker
        - affiliation
        - date
        - text
  securitySchemes: {}
  responses:
    SearchResult:
      description: Example response
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
  parameters:
    search:
      name: search
      in: query
      required: false
      schema:
        type: string
      description: Query for searching the indexed documents (as alternative to post of search resource)
  examples: {}
tags:
  - name: index
  - name: search
